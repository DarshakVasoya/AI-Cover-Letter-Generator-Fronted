import jsPDF from 'jspdf';

/**
 * Export a cover letter string to a justified multi-page PDF.
 * Mirrors previous inline logic; isolated for reuse & testing.
 */
export function exportCoverLetterToPDF(coverLetter) {
  const doc = new jsPDF({ unit: 'pt', format: 'a4' });
  const pageWidth = doc.internal.pageSize.getWidth();
  const marginX = 56;
  const marginTop = 64;
  const lineHeight = 16;
  const maxWidth = pageWidth - marginX * 2;
  doc.setFont('Times', 'Normal');
  doc.setFontSize(12);

  const raw = (coverLetter || '').replace(/\r\n?/g, '\n').trim();
  if (!raw) {
    doc.text('No cover letter content.', marginX, marginTop);
    doc.save('cover-letter.pdf');
    return;
  }
  const rawLines = raw.split(/\n/);
  const paragraphs = [];
  let buffer = [];
  rawLines.forEach(line => {
    if (line.trim() === '') {
      if (buffer.length) { paragraphs.push(buffer.join(' ')); buffer = []; }
      paragraphs.push('');
    } else {
      buffer.push(line.trim());
    }
  });
  if (buffer.length) paragraphs.push(buffer.join(' '));

  const justifyLine = (text, targetWidth) => {
    const words = text.trim().split(/\s+/);
    if (words.length < 2) return text;
    const measure = (t) => doc.getTextWidth(t) * (12 / doc.getFontSize());
    let base = words.join(' ');
    let w = measure(base);
    if (w >= targetWidth * 0.97) return base;
    const gaps = words.length - 1;
    const spaceWidth = measure(' ');
    let extraSpaces = Math.max(0, Math.floor((targetWidth - w) / spaceWidth));
    if (!extraSpaces) return base;
    const basePerGap = Math.floor(extraSpaces / gaps);
    let remainder = extraSpaces % gaps;
    let out = '';
    words.forEach((word, i) => {
      out += word;
      if (i < gaps) {
        let count = 1 + basePerGap + (remainder > 0 ? 1 : 0);
        if (remainder > 0) remainder--;
        out += ' '.repeat(count);
      }
    });
    return out;
  };

  let cursorY = marginTop;
  const pageHeight = doc.internal.pageSize.getHeight();
  const bottomLimit = pageHeight - 72;

  paragraphs.forEach(para => {
    if (para === '') { cursorY += lineHeight; return; }
    const words = para.split(/\s+/);
    let lines = []; let current = '';
    words.forEach(word => {
      const test = current ? current + ' ' + word : word;
      const width = doc.getTextWidth(test) * (12 / doc.getFontSize());
      if (width > maxWidth && current) { lines.push(current); current = word; } else { current = test; }
    });
    if (current) lines.push(current);

    lines.forEach((line, idx) => {
      if (cursorY > bottomLimit) { doc.addPage(); cursorY = marginTop; }
      let outLine = line;
      const isLast = idx === lines.length - 1;
      if (!isLast && line.length > 20) outLine = justifyLine(line, maxWidth);
      doc.text(outLine, marginX, cursorY);
      cursorY += lineHeight;
    });
    cursorY += lineHeight * 0.5;
  });

  if (cursorY + lineHeight * 2 < bottomLimit) {
    doc.setFontSize(10); doc.setTextColor(120);
    doc.text('Generated by AI Cover Letter Generator', marginX, pageHeight - 40);
  }
  doc.save('cover-letter.pdf');
}
